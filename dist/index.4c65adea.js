const t=()=>new Promise((t,e)=>navigator.geolocation.getCurrentPosition(t,e)),e=(t,e)=>{document.querySelector(".min").textContent=`${t}\xb0C`,document.querySelector(".max").textContent=`${e}\xb0C`},o=t=>{let{stationboard:e}=t,o=e.map(t=>{let e=new Date(t.stop.departure),o=e.getHours(),a=e.getMinutes(),r=10>e.getHours()?"0"+o:o,n=10>e.getMinutes()?"0"+a:a;return{departure:`${r}:${n}`,destination:t.to,category:t.category}});return{station:t.station.name,departures:o}},a=t=>{let e=document.querySelector(".departures"),o=`
    <article>
        <div class="time">${t.departure}</div>
        <div class="category" data-category="${t.category}">${t.category}</div>
        <div class="destination">${t.destination}</div>
    </article>
    `;e.insertAdjacentHTML("beforeend",o)},r=t=>{document.querySelector(".departures header p").textContent=t};(async()=>{let e=await t();return{lat:e.coords.latitude,long:e.coords.longitude}})().then(t=>{console.log(t);let e=`http://transport.opendata.ch/v1/locations?x=${t.lat}&y=${t.long}&type=station`,o=`https://api.open-meteo.com/v1/forecast?latitude=${t.lat}&longitude=${t.long}&daily=apparent_temperature_max,apparent_temperature_min&timezone=auto`;return Promise.all([fetch(e).then(t=>t.json()),fetch(o).then(t=>t.json())])}).then(t=>{let[o,a]=t;console.log(a),e(a.daily.apparent_temperature_min[0],a.daily.apparent_temperature_max[0]),console.log(o);let r=o.stations.filter(t=>"train"===t.icon)[0];if(r)fetch(`https:transport.opendata.ch/v1/stationboard?station=${r}&limit=6`).then(t=>t.json());else throw Error("No trains nearby")}).then(t=>{let e=o(t);r(e.station),e.departures.forEach(t=>{a(t)})}).catch(t=>{console.error(t.message),document.querySelector(".departures p").textContent=`\u{1F622}${t.message}`});
//# sourceMappingURL=index.4c65adea.js.map
